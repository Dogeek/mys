name: Test

on: [push, pull_request]

jobs:
  macos:

    runs-on: macos-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Test
      run: |
        g++ --version
        env MYS="PYTHONPATH=$(pwd) python -m mys" python setup.py test

  windows:

    runs-on: windows-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Test
      run: |
        $Env:PYTHONUTF8 = 1
        python setup.py test -s tests.test_mys

  linux:

    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coveralls
        pip install pylint
    - name: Test
      run: |
        g++ --version
        env MYS="PYTHONPATH=$(readlink -f .) python -m mys" coverage run --source=mys --omit="**/mys/parser/**" setup.py test
    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
    - name: Install pypa/build
      run: |
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        git clean -dfx
        python -m build --sdist --outdir dist/ .
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        skip_existing: true
        password: ${{ secrets.pypi_password }}
