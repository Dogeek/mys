def double(value: i32) -> i32:
    return 2 * value

def double(value: string) -> i32:
    return double(i32(value))

# Should probably be replaced by "def triple<T>(value: T) -> T:"
# eventually.
@generic(T)
def triple(value: T) -> T:
    return 2 * value

# Should probably be replaced by "class Adder<T>:" eventually.
@generic(T)
class Adder:

    value: T

    def add(self, value: T):
        self.value += value

# Should probably be replaced by "Adder64 = Adder<i64>" eventually.
Adder64 = Adder[i64]

def main():
    print(double(5))
    print(double("1"))

    # Should probably be replaced by "print(triple<u8>(5))"
    # eventually.
    print(triple[u8](5))
    print(triple(5))
    print(triple(5.5))

    # Should probably be replaced by "adder = Adder<i32>()"
    # eventually.
    adder = Adder[i32]()
    adder.add(3)
    print(adder.value)

    adder64 = Adder64()
    adder64.add(3)
    print(adder64.value)
