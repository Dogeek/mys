// This file was generated by mys. DO NOT EDIT!!!

#include "default_and_named_parameters/main.mys.hpp"

namespace mys::default_and_named_parameters::main

{

int foo(int a);

int bar(int a, String& b);

int main(int __argc, const char *__argv[]);

int foo(int a)
{
    return a;
}

int bar(int a, String& b)
{
    return (a + to_int(b));
}

int fie(int a, String& b, int c)
{
    return (a + to_int(b) + c);
}

class Fum : public Object {

public:

    int value;

    Fum(int value)
    {
        this->value = value;
    }

    String __str__() const
    {
        std::stringstream ss;
        ss << "Fum(";
        ss << "value=" << this->value;
        ss << ")";
        return String(ss.str().c_str());
    }

};

int fum(std::shared_ptr<Fum>& a, std::shared_ptr<Fum>& b)
{
    return (a->value + (b ? b->value : throw ValueError("None")));
}

int main(int __argc, const char *__argv[])
{
    (void)__argc;
    (void)__argv;
    std::cout << "foo():        " << " " << foo(1) << std::endl;
    std::cout << "foo(2):       " << " " << foo(2) << std::endl;
    auto b1 = String("5");
    std::cout << "bar(1):       " << " " << bar(1, b1) << std::endl;
    auto b2 = String("10");
    std::cout << "fie(c=4, a=1):" << " " << fie(1, b2, 4) << std::endl;
    try {
        auto a1 = std::make_shared<Fum>(1);
        auto b3 = std::shared_ptr<Fum>();
        std::cout << "fum():        " << " " << fum(a1, b3) << std::endl;
    } catch (std::exception& e) {
        std::cout << "Exception: " << e << std::endl;
    }
    auto a2 = std::make_shared<Fum>(1);
    auto b4 = std::make_shared<Fum>(2);
    std::cout << "fum(b=Fum(2)):" << " " << fum(a2, b4) << std::endl;

    return 0;
}

}

int package_main(int argc, const char *argv[])
{
    return mys::default_and_named_parameters::main::main(argc, argv);
}
