// This file was generated by mys. DO NOT EDIT!!!

#pragma once

#include "mys.hpp"

namespace mys::default_and_named_parameters::main
{

class Fum;

int foo(int a);
#define MYS_DEFAULT_AND_NAMED_PARAMETERS_MAIN_foo_IMPORT_AS(__name__) \
    constexpr auto __name__ = [] (auto &&...args) { \
        return mys::default_and_named_parameters::main::foo(std::forward<decltype(args)>(args)...); \
    };
int bar(int a, String& b);
#define MYS_DEFAULT_AND_NAMED_PARAMETERS_MAIN_bar_IMPORT_AS(__name__) \
    constexpr auto __name__ = [] (auto &&...args) { \
        return mys::default_and_named_parameters::main::bar(std::forward<decltype(args)>(args)...); \
    };
int fie(int a, String& b, int c);
#define MYS_DEFAULT_AND_NAMED_PARAMETERS_MAIN_fie_IMPORT_AS(__name__) \
    constexpr auto __name__ = [] (auto &&...args) { \
        return mys::default_and_named_parameters::main::fie(std::forward<decltype(args)>(args)...); \
    };
int fum(std::shared_ptr<Fum>& a, std::optional<std::shared_ptr<Fum>>& b);
#define MYS_DEFAULT_AND_NAMED_PARAMETERS_MAIN_fum_IMPORT_AS(__name__) \
    constexpr auto __name__ = [] (auto &&...args) { \
        return mys::default_and_named_parameters::main::fum(std::forward<decltype(args)>(args)...); \
    };

}
