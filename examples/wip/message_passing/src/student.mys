from thread import Thread
from poll import Poll
from queue import Queue
from timer import Timer
from random.pseudo import random
from .calculator import Calculator
from .calculator import Add
from .calculator import Result

class Student(Thread):
    """A student adding two numbers using a calculator.

    """

    _student_queue: Queue[Message]
    _calculator_queue: Queue[Message]
    _timer: Timer

    def __init__(self,
                 student_queue: Queue[Message],
                 calculator_queue: Queue[Message]):
        self._student_queue = student_queue
        self._calculator_queue = calculator_queue
        self._timer = Timer(Time(1, 0))

    def run(self):
        poll = Poll()
        poll.add(self._student_queue)
        poll.add(timer)

        self._timer.start()

        while True:
            item = poll.wait()

            if item == self._student_queue:
                self.handle(self._student_queue.get())
            elif item == self._timer:
                print('Timeout.')
                self._calculator_queue.put(Add(random(), random()))
            else:
                raise UnreachableError()

    def handle(self, message: Result):
        print(message)
        self._timer.start()

    def handle(self, message: Message):
        raise Error(f"Unexpected message {message}.")
