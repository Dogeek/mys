from io import StringIO

# Source: https://github.com/kostya/benchmarks/blob/master/brainfuck/bench.b
SOURCE_B: string = """\
>++[<+++++++++++++>-]<[[>+>+<<-]>[<+>-]++++++++
[>++++++++<-]>.[-]<<>++++++++++[>++++++++++[>++
++++++++[>++++++++++[>++++++++++[>++++++++++[>+
+++++++++[-]<-]<-]<-]<-]<-]<-]<-]++++++++++.\
"""

class Tape:

    tape: [i32] = [0]
    pos: i32

    def get(self) -> i32:
        return self.tape[self.pos]

    def inc(self, value: i32):
        self.tape[self.pos] += value

    def move(self, value: i32):
        self.pos += value

        while self.pos >= self.tape.length():
            self.tape.append(0)

class Op:

    def execute(self, tape: Tape):
        raise NotImplementedError()

class Inc(Op):

    val: i32

    def execute(self, tape: Tape):
        tape.inc(self.val)

class Move(Op):

    val: i32

    def execute(self, tape: Tape):
        tape.move(self.val)

class Print(Op):

    def execute(self, tape: Tape):
        print(chr(tape.get()), end="", flush=True)

class Loop(Op):

    ops: [Op]

    def execute(self, tape: Tape):
        while tape.get() > 0:
            run(self.ops, tape)

def parse(source: StringIO) -> [Op]:
    ops: [Op] = []

    while True:
        ch = source.get()

        if ch == '+':
            ops.append(Inc(1))
        elif ch == '-':
            ops.append(Inc(-1))
        elif ch == '>':
            ops.append(Move(1))
        elif ch == '<':
            ops.append(Move(-1))
        elif ch == '.':
            ops.append(Print())
        elif ch == '[':
            ops.append(Loop(parse(source)))
        elif ch in [']', '']:
            break

    return ops

def run(ops: [Op], tape: Tape):
    for op in ops:
        op.execute(tape)

def main():
    ops = parse(StringIO(SOURCE_B))
    run(ops, Tape())
