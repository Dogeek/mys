from system import exit

class Handler:

    def execute(self):
        raise NotImplementedError("To be implemented by subclasses.")

class Commands:

    _handlers: {string: Handler}

    def register_command(self, name: string, handler: Handler):
        self._handlers[name] = handler

    def execute(self, name: string):
        handler = self._handlers.get(name)

        if handler is not None:
            handler.execute()
        else:
            print(f"Unknown command {name}.")

    def print_help(self):
        print("Available commands:")

        for name in self._handlers:
            print(name)

class HiHandler(Handler):

    @override
    def execute(self):
        print("Hi!")

class ExitHandler(Handler):

    @override
    def execute(self):
        print("Bye!")
        exit(0)

def main():
    commands = Commands()
    commands.register_command("hi", HiHandler())
    commands.register_command("exit", ExitHandler())
    commands.print_help()

    while True:
        command = input("> ")
        commands.execute(command)
