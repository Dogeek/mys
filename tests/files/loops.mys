def one() -> i32:
    return 1

def two() -> [str]:
    # ToDo: return ['c', 'd']
    'mys-embedded-c++ return List<String>({"c", "d"});'

@test
def test_1():
    # 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
    for i in range(10):
        print('range(10):', i)

    # 5
    for i in range(5, 6):
        print('range(5, 6):', i)

    # 1, 3, 5, 7, 9
    for i in range(1, 10, 2):
        print('range(1, 10, 2):', i)

    # -4, -3, -2, -1, 0
    for i in range(-4, 1):
        print('range(-4, 1):', i)

    # 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
    for i in range(9, -1, -1):
        print('range(9, -1, -1):', i)

    # 100, 97, 94, 91
    for i in range(100, 90, -3):
        print('range(100, 90, -3):', i)

@test
def test_2():
    # 10, 14, 18
    a: i32 = 10
    b: i32 = 20
    c: i32 = 4

    for i in range(a, b, c):
        print('range(a, b, c):', i)

    # 10, 7, 4, 1
    a = 10
    b = 0
    c = -3

    for i in range(a, b, c):
        print('range(a, b, c):', i)

    # 1, 2
    for i in range(one(), one() + 2, one()):
        print('range(one(), one() + 2, one()):', i)

    # # 0 1, 1 5, 2 3
    # ToDo: for i, j in enumerate([one(), 5, 3]):
    for i, j in 'mys-embedded-c++ enumerate(List<i32>({one(), 5, 3}))':
        print('in enumerate([one(), 5, 3]):', i, j)

    # 1.0, 5.2, -3.7
    # ToDo: for i in [1.0, 5.2, -3.7]:
    for i in 'mys-embedded-c++ List<f64>({1.0, 5.2, -3.7})':
        print('[1.0, 5.2, -3.7]:', i)

    # # 1 a, 2 b
    # d: {i32: str} = {1: 'a', 2: 'b'}
    #
    # for i, j in d.items():
    #     print('in d.items():', i, j)

@test
def test_3():
    # c, d
    for i in two():
        print('two():', i)

    for i in range(10):
        if i == 0:
            print('range(10):', i)
        elif i == 1:
            continue
        elif i < 5:
            print('range(10):', i)
        else:
            break

    for _ in range(2):
        print('range(2):', '_')

    while False:
        pass

    while True:
        break
