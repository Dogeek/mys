def func_1(a: int) -> (int, Final[str]):
    return 2 * a, 'Bar'

def func_2(a: int, b: int=2) -> int:
    for i in range(b):
        a += i * b

    return a

def func_3(a: Optional[int]) -> int:
    if a is None:
        return 0
    else:
        return 2 * a

def func_4(a: int) -> {int: [float]}:
    return {
        1: [],
        10 * a: [7.5, -1.0]
    }

def func_5():
    try:
        raise Exception()
    except:
        print('func_5():      An exception occurred.')

class Calc:

    def __init__(self, value: int):
        self.value: int = value

    def triple(self):
        self.value *= 3

def main(args: [str]):
    value = int(args[1])
    print('func_1(value):', func_1(value))
    print('func_2(value):', func_2(value))
    print('func_3(None): ', func_3(None))
    print('func_3(value):', func_3(value))
    print('func_4(value):', func_4(value))
    func_5()
    calc = Calc(value)
    calc.triple()
    print('calc:         ', calc)
