"""mys-embedded-c++-before-namespace
#include <before>
"""

"""mys-embedded-c++
#include <not-before>
"""

def func_1(a: i32) -> (i32, string):
    return 2 * a, "Bar"

# ToDo
# def func_2(a: i32, b: i32 = 1) -> i32:
#     for i in range(b):
#         a += i * b
#
#     return a

def func_3(a: i32) -> {i64: [f64]}:
    return {
        1: [],
        10 * i64(a): [7.5, -1.0]
    }

def func_4():
    try:
        raise GeneralError()
    except:
        print("func_4():      An exception occurred.")

def func_5() -> [i64]:
    small: [i64] = []

    for v in [3, 1, 5, 7, 2]:
        if v < 5:
            small.append(v)

    small.sort()
    small.reverse()

    return small

class Calc:

    value: i32

    def triple(self):
        self.value *= 3

def main(argv: [string]):
    value: i32 = i32(argv[1])
    print("func_1(value):", func_1(value))
    # ToDo
    # print("func_2(value):", func_2(value))
    print("func_3(value):", func_3(value))
    func_4()
    print("func_5():     ", func_5())
    calc: Calc = Calc(value)
    calc.triple()
    print("calc:         ", calc)
