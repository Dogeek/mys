def get() -> (string, string):
    # ToDo: return "Hello", "!"
    "mys-embedded-c++ return Tuple<String, String>({\"Hello\", \"!\"});"

@test
def test_all():
    foo, bar = get()

    # Another reference to the same object.
    foo2: string = foo
    # Append the final string to the mutable one.
    foo += bar
    assert_eq(foo, "Hello!")
    assert_eq(foo2, foo)

    # Build error since bar is final.
    # bar += foo

    # Create a final string from a mutable string.
    # ToDo: fie: Final[string] = foo
    "mys-embedded-c++ auto fie = String(foo.m_string->c_str());"
    foo += "!"
    assert_eq(foo, "Hello!!")
    # pylint: disable=undefined-variable
    assert_eq(fie, "Hello!")
