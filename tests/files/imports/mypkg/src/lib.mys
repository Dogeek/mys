from mypkg1.subpkg1.mod1 import func1
from mypkg1 import VAR3
from mypkg1.subpkg1.mod1 import Class1
from mypkg2 import func2
from mypkg2 import VAR1 as VAR2
from mypkg2 import Class1 as MyPkgClass1
from .mod1 import func4 as my_func4
from .mod1 import Bar
from .mod1 import Fam

class Class2:
    x: Class1
    y: [MyPkgClass1]

def func8() -> i64:
    return 5

@test
def test_all():
    assert func1(1, 5) == 6

    class_1 = Class1(10)
    assert class_1.value == 10

    assert func2(99) == 99
    assert VAR2 == 5
    assert VAR3 == 1
    my_pkg_class_1 = MyPkgClass1(3)
    assert my_pkg_class_1.value == 3

# This class has the same name (Foo) as the class returned by
# my_func4() to test that the correct Foo class is returned.
class Foo:
    apa: string

# ToDo
#@test
#def test_no_import_needed_of_returned_class():
#    assert my_func4(5, Fam()).a == 5
#    #assert Bar().fie().fum()

@test
def test_local_foo_not_returned_foo():
    v = Foo("hi")
    assert v.apa == "hi"
