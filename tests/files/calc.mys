def main():
    x: int = 10
    y: int = -2

    res: int = (5 + 2 * x) - 8 / y
    print('(5 + 2 * x) - 8 / y =', res)
    assert res == 29

    res = ((5 + 2 * x) - 8) / y
    print('((5 + 2 * x) - 8) / y =', res)
    assert res == -8

    res = 3 ** 2
    print('3 ** 2 =', res)
    assert res == 9

    res = 1 << 2
    print('1 << 2 =', res)
    assert res == 4

    res = 4 >> 2
    print('4 >> 2 =', res)
    assert res == 1

    res = 1 | 8
    print('1 | 8 =', res)
    assert res == 9

    res = 1 ^ 3
    print('1 ^ 3 =', res)
    assert res == 2

    res = 1 & 3
    print('1 & 3 =', res)
    assert res == 1

    res = 10 % 4
    print('10 % 4 =', res)
    assert res == 2

    # Unsigned 32 bits integer.
    x_u32: u32 = 1000000000
    y_u32: u32 = 5

    res_u32: u32 = x_u32 - 2 * y_u32
    print('x_u32 - 2 * y_u32 =', res_u32)
    assert res_u32 == 999999990

    res_u32 = 2 * x_u32
    print('2 * x_u32 =', res_u32)
    assert res_u32 == 2000000000

    res_u32 = 3 * x_u32
    print('3 * x_u32 =', res_u32)
    assert res_u32 == 3000000000

    res_u32 = 4 * x_u32
    print('4 * x_u32 =', res_u32)
    assert res_u32 == 4000000000

    # Wrap around.
    res_u32 = 5 * x_u32
    print('5 * x_u32 =', res_u32)
    assert res_u32 == 705032704

    # Signed 16 bits integer.
    x_s16: s16 = 32767

    res_s16: s16 = x_s16
    print('x_s16 =', res_s16)
    assert res_s16 == 32767

    # Wrap around.
    res_s16 = x_s16 + 1
    print('x_s16 + 1 =', res_s16)
    assert res_s16 == -32768
